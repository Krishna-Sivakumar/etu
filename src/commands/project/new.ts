import { Command } from "@/commander";
import { Maybe, scream, slugify, timeMs } from "../../utils.ts";
import * as storage from "../../storage.ts";

interface ENewOpts {
    id: string;
}

const currency = await storage.getConfigValue("currency");

const action = async (
    name: string,
    rate: number,
    initialHours: Maybe<number>,
    { id }: ENewOpts,
) => {
    if (id) {
        const project = await storage.getProjectById(id);
        if (project.isSome()) scream(`Project with id ${id} already exists.`);
    }

    const slug = id || slugify(name);
    await storage.putProject({ name, rate, slug });

    if (initialHours) {
        const currentTime = Date.now();
        await storage.putSession(slug, {
            name: "Initial hours",
            start: currentTime - timeMs({ h: initialHours }),
            end: currentTime,
        });
    }

    console.log(
        `Created project "${name}" with id ${slug}. Rate is ${currency}${rate}/hr. ${initialHours ? "Initial hours: " + initialHours + "." : ""
        }`,
    );
    await storage.setDefaultProject(slug);
};

export const create = new Command("new")
    .description("Start a new project and set it as the default.")
    .option(
        "-i --id <string>",
        "the slug to use for the project. autogenerated by default.",
    )
    .argument("<name>", "name to use for the project.")
    .argument("<rate>", "hourly rate", Number)
    .argument("[initial-hours]", "number of hours to log to start with", Number)
    .action(action)
    .showHelpAfterError();
